node( 'maven' ) {

    stage('checkout'){
        checkout scm
    }

    stage('unit test'){}
    stage('sonar scan'){}

    stage('trigger build'){
        login()
        sh """
            cd java-app
            mkdir -p s2i/deployments
            mvn package dependency:copy-dependencies -Popenshift -DskipTests -e
            mv target/dependency/* s2i/deployments/.
            mv target/*.jar s2i/deployments/. 
            oc start-build java-app --from-dir=s2i --follow=true
        """
    }

}

podTemplate(label: 'mypod', cloud: "openshift", containers: [
    containerTemplate(name: 'maven', image: 'maven:3.3.9-jdk-8-alpine', ttyEnabled: true, command: 'cat'),
    containerTemplate(name: 'golang', image: 'golang:1.6.3', ttyEnabled: true, command: 'cat')
  ]) {

node( 'mypod'){

container(name: 'golang', cloud: "openshift"){

  stage('smoke test') {
     sh 'echo apple'
  }
  stage('deploy to dev') {}
  stage('deploy to prod') {
     input 'Promte to Prod?'
  }
}

}
}


def login() {
    sh """
       set +x
       oc login --certificate-authority=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt --token=\$(cat /var/run/secrets/kubernetes.io/serviceaccount/token) https://kubernetes.default.svc.cluster.local >/dev/null 2>&1 || echo 'OpenShift login failed'
       """
}






